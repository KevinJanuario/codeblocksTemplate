parameters:
  - name: buildType
    default: ''
  - name: setor
 
steps:
- script: |
    docker pull <dockerimage>/debian:9 
    docker run -d --name $(Build.Repository.Name) -v $(Build.SourcesDirectory):/opt/app -it docker.io/<dockerimage>/debian:9 /bin/bash
    docker exec $(Build.Repository.Name) bash -c "cd <dir-app> && make -f Makefile.freeimage clean && make -f Makefile.freeimage all"
    
    repo="$(nexusOrg)/${{ parameters.setor }}/$(System.TeamProject)/$(Build.Repository.Name)"
    artifactPath="$(Build.SourcesDirectory)/<app>"
    artifact="*.so.*.*.*"

    # URL de destino no Nexus
    URL_DESTINO="$(nexusHost)/repository/$repo"

    # Encontrar o caminho completo do arquivo
    ARQUIVO_ENVIAR=$(find "$artifactPath" -name "$artifact" -type f)

    # Verificar se um arquivo foi encontrado
    if [ -z "$ARQUIVO_ENVIAR" ]; then
      echo "Nenhum arquivo correspondente encontrado em $artifactPath com o padr√£o $artifact"
      exit 1
    fi

    # Comando curl para enviar o arquivo
    curl -u "$(nexusUser):$(nexusPass)" --upload-file "$ARQUIVO_ENVIAR" "$(nexusHost)/repository/$repo/"
    
    echo "Arquivo $ARQUIVO_ENVIAR enviado para $URL_DESTINO"

    docker rm -f $(Build.Repository.Name)

  displayName: 'Execute Script inside Container'
  condition: succeeded()
  continueOnError: false