---
parameters:
  - name: buildTypeWindows
    default: 'c_windows'
  - name: setor
  - name: buildType_C
    default: 'dotnet_C'


steps:
  - ${{ if eq(parameters.buildTypeWindows, 'c_windows') }}:
    - powershell: |
        $repo="$(nexusOrg)/${{ parameters.setor }}/$(System.TeamProject)/$(Build.Repository.Name)"
        $authInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$(nexusUser):$(nexusPass)"))
        $file32 = "$(Build.SourcesDirectory)\Trunk\C-Fontes\bin\Windows\Release\x86\*"
        $file64 = "$(Build.SourcesDirectory)\Trunk\C-Fontes\bin\Windows\Release\x64\*"
  
        # Usar loop para tratar múltiplos arquivos, já que -InFile não suporta wildcard (*.dll)
        Get-ChildItem -Path $file32 | ForEach-Object {
            Invoke-WebRequest -Uri "$(nexusHost)/repository/$repo/x86/$($_.Name)" -Method Put -Headers @{
                Authorization = "Basic $authInfo"
            } -InFile $_.FullName -UseBasicParsing
        }
        
        Get-ChildItem -Path $file64 | ForEach-Object {
            Invoke-WebRequest -Uri "$(nexusHost)/repository/$repo/x64/$($_.Name)" -Method Put -Headers @{
                Authorization = "Basic $authInfo"
            } -InFile $_.FullName -UseBasicParsing
        }
      displayName: 'Deploy to Nexus'
  
  - ${{ if eq(parameters.buildType_C, 'dotnet_C') }}:
      - checkout: none

      - powershell: |
            $artifactPath = "C:\temp\$(Build.BuildId)-${{ parameters.buildType_C }}\artifact"
            Write-Host "[+] Criando diretório $artifactPath"
            New-Item -ItemType Directory -Path "$artifactPath\artifact\$(Build.Repository.Name)" -Force
            New-Item -ItemType Directory -Path "$artifactPath-temp" -Force
            Write-Host "##vso[task.setvariable variable=Artifact]$artifactPath"
            Write-Host "##vso[task.setvariable variable=ArtifactTemp]$artifactPath-temp"
        displayName: CreateOutputDir

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType_C: 'current'
          downloadType: 'single'
          artifactName: '$(Build.Repository.Name)'
          downloadPath: '$(Artifact)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Artifact)'
      artifactName: 'artifact-${{ parameters.buildType }}'
    condition: succeeded()
    displayName: 'Publish Artifacts'
    
  - powershell: |
      # Define variáveis
      $repo = "$(nexusOrg)/${{ parameters.setor }}/$(System.TeamProject)"
      $art = Get-Item -LiteralPath $(Artifact)

      # Itera sobre os artefatos
      foreach ($artifact in Get-ChildItem -Path $art -File) {
          $upload = $artifact.FullName.Substring($artifact.FullName.IndexOf("artifact\") + 9)
          Write-Host "[+] File: $upload"
          Write-Host "[+] Repo: $repo"
          $uploadURL = "$(nexusOrg)/repository/$repo/$upload"
          Write-Host "[!!] Upload URL: $uploadURL"

          # Executa a operação de upload
          $result = Invoke-RestMethod -Uri $uploadURL -Method Put -Credential (Get-Credential -UserName $(nexusUser) -Password $(nexusPass)) -InFile $artifact.FullName
          if ($result.StatusCode -eq 201) {
              Write-Host "  - $($artifact.FullName) Publicado com sucesso no repositório $repo!"
          } else {
              Write-Host "  [-] Falha ao publicar no repositório $repo - $($artifact.FullName)"
              exit 1
          }
      }