---
parameters:
  # - name: buildTypeWindows
  #   default: 'c_windows'
  - name: setor
  - name: buildType
    default: ''

steps:
  - ${{ if eq(parameters.buildType, 'c_windows') }}:
    - powershell: |
        $repo="$(nexusOrg)/${{ parameters.setor }}/$(System.TeamProject)/$(Build.Repository.Name)"
        $authInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$(nexusUser):$(nexusPass)"))
        $file32 = "$(Build.SourcesDirectory)\Trunk\C-Fontes\bin\Windows\Release\x86\*"
        $file64 = "$(Build.SourcesDirectory)\Trunk\C-Fontes\bin\Windows\Release\x64\*"
  
        # Usar loop para tratar múltiplos arquivos, já que -InFile não suporta wildcard (*.dll)
        Get-ChildItem -Path $file32 | ForEach-Object {
            Invoke-WebRequest -Uri "$(nexusHost)/repository/$repo/x86/$($_.Name)" -Method Put -Headers @{
                Authorization = "Basic $authInfo"
            } -InFile $_.FullName -UseBasicParsing
        }
        
        Get-ChildItem -Path $file64 | ForEach-Object {
            Invoke-WebRequest -Uri "$(nexusHost)/repository/$repo/x64/$($_.Name)" -Method Put -Headers @{
                Authorization = "Basic $authInfo"
            } -InFile $_.FullName -UseBasicParsing
        }
      displayName: 'Deploy to Nexus'
  
  - ${{ if eq(parameters.buildType, 'dotnet') }}:
      - checkout: none

      - powershell: |
            $artifactPath="C:\temp\$(Build.BuildId)-${{ parameters.buildType }}\artifact"
            Write-Host "[+] Criando diretório $artifactPath"
            New-Item -ItemType Directory -Path "$artifactPath\$(Build.Repository.Name)" -Force
            New-Item -ItemType Directory -Path "$artifactPath-temp" -Force
            Write-Host "##vso[task.setvariable variable=Artifact]$artifactPath"
            Write-Host "##vso[task.setvariable variable=ArtifactTemp]$artifactPath-temp"
        displayName: CreateOutputDir

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Artifact)'
          artifactName: 'artifact-${{ parameters.buildType }}'
        condition: succeeded()
        displayName: 'Publish Artifacts'

      - powershell: |
            # Define variáveis
            $repo = "$(nexusOrg)/${{ parameters.setor }}/$(System.TeamProject)"
            $art = Get-Item -LiteralPath $(Artifact)
            $authInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$(nexusUser):$(nexusPass)"))
            $file="$(Artifact)\$(Build.Repository.Name)"

            # Usar loop para tratar múltiplos arquivos, já que -InFile não suporta wildcard (*.dll)
            Get-ChildItem -Path $file | ForEach-Object {
              $result=Invoke-WebRequest -Uri "$(nexusHost)/repository/$repo/$($_.Name)" -Method Put -Headers @{
                  Authorization = "Basic $authInfo"
              } -InFile $_.FullName -UseBasicParsing
            }
            if ($result.StatusCode -eq 201) {
            Write-Host "  - $($artifact.FullName) Publicado com sucesso no repositório $repo!"
            } else {
                Write-Host "  [-] Falha ao publicar no repositório $repo - $($artifact.FullName)"
                exit 1
            }
        displayName: 'Deploy to Nexus'